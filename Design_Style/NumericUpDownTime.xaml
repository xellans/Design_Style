<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Design_Style">
    <local:TimeIntervalToStringConverter x:Key="TimeIntervalToStringConverter" />

    <!--Кнопка уменьшить значение-->
    <Style x:Key="StyleDownValueButton" TargetType="Button">
        <Setter Property="Command" Value="{x:Static local:UpDownButton.DownCommand}"/>
        <Setter Property="local:NumericUpDownTime.BackgroundArrow" Value="#BBBBBB"></Setter>
        <Setter Property="local:NumericUpDownTime.BackgroundArrowMouseOver" Value="#46BCFF"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="root" Background="Transparent" MinWidth="{Binding ActualWidth, ElementName=root}" Padding="10,0,10,0">
                        <Viewbox Name="VbArrow" 
                             Margin="0 9 0 9">
                            <Path  Name="Arrow"
                               RenderTransformOrigin="0.5,0.5"
                               Stretch="Fill" 
                               Stroke="{Binding BackgroundArrow, RelativeSource={RelativeSource AncestorType=local:NumericUpDownTime}}"
                               StrokeThickness="1.5"
                               StrokeStartLineCap="Round"
                               StrokeEndLineCap="Round"
                               StrokeLineJoin="Round"
                               Data="M1 13L7 7L1 1">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" Value="{Binding (local:NumericUpDownTime.BackgroundArrowMouseOver), RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="Arrow"></Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=DownValueButton, Path=IsPressed}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="True">
                                        <ThicknessAnimation Storyboard.TargetName="VbArrow" Storyboard.TargetProperty="Margin" From="0 9 0 9" To="0 12 0 12" Duration="0:0:0:0.1000"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопка увеличить значение-->
    <Style x:Key="StyleUpValueButton" TargetType="Button">
        <Setter Property="Command" Value="{x:Static local:UpDownButton.UpCommand}"/>
        <Setter Property="local:NumericUpDownTime.BackgroundArrow" Value="#BBBBBB"></Setter>
        <Setter Property="local:NumericUpDownTime.BackgroundArrowMouseOver" Value="#46BCFF"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="root" Background="Transparent" MinWidth="{Binding ActualWidth, ElementName=root}" Padding="10,0,10,0">
                        <Viewbox Name="VbArrow"
                             Margin="0 9 0 9">
                            <Path Name="Arrow"
                              Stretch="Fill" 
                              Stroke="{Binding BackgroundArrow, RelativeSource={RelativeSource AncestorType=local:NumericUpDownTime}}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              StrokeLineJoin="Round"
                              Data="M1 13L7 7L1 1"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" Value="{Binding (local:NumericUpDownTime.BackgroundArrowMouseOver), RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="Arrow"></Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=UpValueButton, Path=IsPressed}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="True">
                                        <ThicknessAnimation Storyboard.TargetName="VbArrow" Storyboard.TargetProperty="Margin" From="0 9 0 9" To="0 12 0 12" Duration="0:0:0:0.100"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:NumericUpDownTime}">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="#E5E5E5"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Padding" Value="10 0 0 0"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Value" Value="0"></Setter>
        <Setter Property="Minimum" Value="0"></Setter>
        <Setter Property="Maximum" Value="1000"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericUpDownTime}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border 
                              CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:NumericUpDownTime}}}" 
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <local:DoubleTextBox x:Name="NumericTextBox" 
                                         FontSize="{TemplateBinding FontSize}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         Margin="{TemplateBinding Padding}"
                                         VerticalAlignment="Center"
                                         Grid.Column="0"
                                         Background="Transparent"
                                         BorderThickness="0"></local:DoubleTextBox>
                                
                                <Button x:Name="DownValueButton" Style="{StaticResource StyleDownValueButton}" Grid.Column="1"></Button>
                                <Button x:Name="UpValueButton" Style="{StaticResource StyleUpValueButton}" Grid.Column="2"></Button>
                            </Grid>
                        </Border>
                        <ComboBox Grid.Column="1"
                                  Height="{TemplateBinding Height}"
                                  Margin="14,0,0,0"
                                  Width="66"
                                  local:SelectorHelper.ItemsSource="{TemplateBinding TimeIntervalsDisplay}"
                                  SelectedValue="{Binding TimeType, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  SelectedValuePath="Key"
                                  DisplayMemberPath="Value">
                        </ComboBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>