<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Design_Style"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="{x:Type local:Custom_TextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#E5E5E5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10, 0 ,0, 0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="local:Custom_TextBox.TextExist" Value="TextBox.Text" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Custom_TextBox}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="True"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=TextBox}}">
                        <Grid>
                            <TextBlock x:Name="PlaceHolder"
                                       Padding="{TemplateBinding Padding}"
                                       Focusable="false"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding Foreground}" Opacity="0.4"
                                       Text="{Binding PlaceText, RelativeSource={RelativeSource AncestorType={x:Type local:Custom_TextBox}}}"
                                       VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=local:Custom_TextBox}}"
                                       HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=local:Custom_TextBox}}"/>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="false"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=local:Custom_TextBox}}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=local:Custom_TextBox}}"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsTextEmpty" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PlaceHolder"/>
                        </Trigger>

                        <Trigger Property="IsTextEmpty" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PlaceHolder"/>
                        </Trigger>

                        <Trigger Property="IsError" Value="True">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushError, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsError" Value="false"></Condition>
                                <Condition Property="IsLongNumeric" Value="false"></Condition>
                                <Condition Property="IsTextEmpty" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushError, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsError" Value="false"></Condition>
                                <Condition Property="IsLongNumeric" Value="false"></Condition>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border"
                                Value="{Binding BorderBrushError, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsError" Value="false"></Condition>
                                <Condition Property="IsLongNumeric" Value="true"></Condition>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsError" Value="false"></Condition>
                                <Condition Property="IsLongNumeric" Value="False"></Condition>
                                <Condition Property="IsTextEmpty" Value="True"></Condition>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>